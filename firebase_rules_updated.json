{
  "rules": {
    ".read": true,
    ".write": "auth != null",
    
    "users": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid",
        "profile": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        },
        "favorites": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        },
        "reviews": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        },
        "roles": {
          ".read": "$uid === auth.uid",
          ".write": "$uid === auth.uid"
        }
      }
    },
    
    "events": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      ".indexOn": ["type", "date", "country", "city", "hasCountdown", "createdAt"],
      "$eventId": {
        ".validate": "newData.hasChildren(['id', 'title', 'description', 'type', 'date']) && newData.child('type').val().matches(/^(celebration|match|general)$/)"
      }
    },
    
    "celebrations": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      ".indexOn": ["celebrationType", "date", "isMainEvent", "hasCountdown"],
      "$celebrationId": {
        ".validate": "newData.hasChildren(['id', 'name', 'description', 'date', 'location'])"
      }
    },
    
    "matches": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      ".indexOn": ["matchDate", "homeTeam", "awayTeam", "matchType", "group", "matchStatus", "hasCountdown"],
      "$matchId": {
        ".validate": "newData.hasChildren(['id', 'homeTeam', 'awayTeam', 'matchDate', 'stadium']) && newData.child('matchStatus').val().matches(/^(scheduled|live|finished|postponed|cancelled)$/)"
      }
    },
    
    "event_stats": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true",
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true"
    },
    
    "places": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true"
    },
    
    "banners": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true"
    },
    
    "public_banners": {
      ".read": true,
      ".write": true
    },
    
    "temp_banners": {
      ".read": true,
      ".write": true
    },
    
    "emergency_banners": {
      ".read": true,
      ".write": true
    },
    
    "quickInfo": {
      ".read": true,
      ".write": "auth != null && root.child('users').child(auth.uid).child('roles').child('admin').val() === true"
    },
    
    "reviews": {
      "$targetId": {
        ".read": true,
        "$reviewId": {
          ".read": true,
          ".write": "auth != null && newData.child('userId').val() === auth.uid",
          ".validate": "newData.hasChildren(['userId', 'targetId', 'rating', 'comment', 'timestamp'])"
        }
      }
    },
    
    "notifications": {
      "$uid": {
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid"
      }
    }
  }
}
